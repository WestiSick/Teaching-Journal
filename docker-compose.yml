version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: teacher_journal_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: vadimvadimvadim
      POSTGRES_DB: teacher
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - teacher-network

  adminer:
    image: adminer
    container_name: teacher_journal_adminer
    ports:
      - "8081:8080"
    restart: unless-stopped
    networks:
      - teacher-network
    depends_on:
      - postgres

  api:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      args:
        SERVICE: dashboard
    container_name: teacher_journal_api
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: vadimvadimvadim
      DB_NAME: teacher
      DB_PORT: 5432
      DB_CONNECTION_STRING: "postgres://postgres:vadimvadimvadim@postgres:5432/teacher?sslmode=disable"
    restart: unless-stopped
    networks:
      - teacher-network

  schedule_api:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      args:
        SERVICE: schedule
    container_name: teacher_journal_schedule_api
    depends_on:
      - postgres
      - api
    ports:
      - "8091:8091"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: vadimvadimvadim
      DB_NAME: teacher
      DB_PORT: 5432
      DB_CONNECTION_STRING: "postgres://postgres:vadimvadimvadim@postgres:5432/teacher?sslmode=disable"
    restart: unless-stopped
    networks:
      - teacher-network

  ticket_api:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      args:
        SERVICE: tickets
    container_name: teacher_journal_ticket_api
    depends_on:
      - postgres
      - api
    ports:
      - "8090:8090"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: vadimvadimvadim
      DB_NAME: teacher
      DB_PORT: 5432
      DB_CONNECTION_STRING: "postgres://postgres:vadimvadimvadim@postgres:5432/teacher?sslmode=disable"
    restart: unless-stopped
    volumes:
      - attachments:/app/attachments
    networks:
      - teacher-network

  tests_api:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      args:
        SERVICE: tests
    container_name: teacher_journal_tests_api
    depends_on:
      - postgres
      - api
    ports:
      - "8092:8092"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: vadimvadimvadim
      DB_NAME: teacher
      DB_PORT: 5432
      DB_CONNECTION_STRING: "postgres://postgres:vadimvadimvadim@postgres:5432/teacher?sslmode=disable"
    restart: unless-stopped
    networks:
      - teacher-network

  landing:
    build:
      context: ./frontend/landing
      dockerfile: ../../docker/frontend/landing.Dockerfile
    container_name: teacher_journal_landing
    restart: unless-stopped
    networks:
      - teacher-network
    depends_on:
      - api

  dashboard:
    build:
      context: ./frontend/dashboard
      dockerfile: ../../docker/frontend/dashboard.Dockerfile
    container_name: teacher_journal_dashboard
    restart: unless-stopped
    networks:
      - teacher-network
    depends_on:
      - api
      - schedule_api
      - ticket_api
      - tests_api

  nginx:
    image: nginx
    container_name: teacher_journal_nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - api
      - schedule_api
      - ticket_api
      - landing
      - dashboard
      - tests_api
    restart: unless-stopped
    networks:
      - teacher-network

volumes:
  postgres_data:
  attachments:

networks:
  teacher-network:
    driver: bridge