name: Deploy to Production

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run backend tests
        run: go test ./...

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies and run dashboard tests
        run: |
          cd frontend/dashboard
          npm ci
          npm test --silent

      - name: Install dependencies and run landing tests
        run: |
          cd frontend/landing
          npm ci
          npm test --silent

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Setup SSL certificates
        run: |
          # Create a script to set up the certificates
          cat > setup-ssl-certs.sh << 'EOF'
          #!/bin/bash
          
          # Create directory if it doesn't exist
          mkdir -p ~/ssl-certs
          
          # Write certificate file
          cat > ~/ssl-certs/vg.vadimbuzdin.ru_2025-03-11-23-17_19.crt << 'CERT_EOF'
          ${{ secrets.SSL_CERTIFICATE }}
          CERT_EOF
          
          # Write key file
          cat > ~/ssl-certs/vg.vadimbuzdin.ru_2025-03-11-23-17_19.key << 'KEY_EOF'
          ${{ secrets.SSL_PRIVATE_KEY }}
          KEY_EOF
          
          # Set proper permissions
          chmod 600 ~/ssl-certs/vg.vadimbuzdin.ru_2025-03-11-23-17_19.key
          
          echo "SSL certificates have been set up in ~/ssl-certs/"
          EOF
          
          # Copy the script to the server and execute it
          cat setup-ssl-certs.sh | ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cat > ~/setup-ssl-certs.sh && chmod +x ~/setup-ssl-certs.sh && ~/setup-ssl-certs.sh"

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "~/deploy-scripts/deploy.sh"